#-------------------------------basic----------------------------------------

num_gpus: 1             # number of gpus
use_wandb: False        # use wandb or tensorboard

#-------------------------------data-----------------------------------------

exp_name: TAT_Ignatius_F4                    # experiment name
root_dir: data/NSVF/TanksAndTemple/Ignatius    # root directory of dataset
ckpt_path: null  
ckpt_path: ckpts/nsvf/TAT_Ignatius_F4/epoch=19_slim.ckpt  # show_gui
dataset_name: nsvf                # [nerf | nsvf | colmap | nerfpp | rtmv] 
split: train                      # [train | trainval| trainvaltest] 
downsample: 0.5                   # downsample factor (<=1.0) for the images

#-------------------------------model----------------------------------------

scale: 0.5                        # scene scale (whole scene must lie in [-scale, scale]^3
use_exposure: False               # whether to train in HDR-NeRF setting
L: 16 # 多尺度特征层数。原始值: 16 
F: 4  # 每层特征维度。原始值: 2 
log2_T: 19 # 哈希表大小。原始值: 19 
N_min: 16 #　最低分辨率。原始值: 16 

#-------------------------------training-------------------------------------

distortion_loss_w: 0.0            # weight of distortion loss (see losses.py), 0 to disable (default), to enable, a good value is 1e-3 for real scene and 1e-2 for synthetic scene

batch_size: 8192                 # number of rays in a batch
ray_sampling_strategy: all_images # [all_images | same_image] sample pixels in one image or all images
num_epochs: 20                     # number of training epochs
lr: 2.e-2                         # learning rate

# experimental args
optimize_ext: False               # whether to optimize extrinsics
random_bg: False                  # whether to train with random bg color (real scene only) to avoid objects with black color to be predicted as transparent

#-------------------------------validation-----------------------------------

eval_lpips: True                 # evaluate lpips metric (consumes more VRAM)
val_only: False                   # run only validation (need to provide ckpt_path)
no_save_test: True               # whether to save test image and video

#-------------------------------misc-----------------------------------------

# pretrained checkpoint to load (including optimizers, etc). commonly 'ckpts/dataset_name/exp_name/epoch=xx_slim.ckpt'
# pretrained checkpoint to load (excluding optimizers, etc)                 
weight_path: null
fix_encoder: False
use_l1_loss: False
use_depth_loss: False